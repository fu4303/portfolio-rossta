(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(n,r,e){},21:function(n,r,e){"use strict";e.r(r);e(14);var t=e(0),a=e.n(t),i=a()("app:enhance");"serviceWorker"in navigator?navigator.serviceWorker.getRegistrations().then(function(n){n.forEach(function(n){return n.unregister()})}):i("service worker is not supported.");var o=e(1),u=e.n(o),c=e(6),s=e.n(c),p=e(7),f=e.n(p),l=e(8),v=e.n(l),g=e(9),h=e.n(g),d=e(10),w=e.n(d),y=e(11),b=e.n(y),k=e(12),m=e.n(k),j=e(13),x=e.n(j);function E(n,r){return function(n){if(Array.isArray(n))return n}(n)||function(n,r){var e=[],t=!0,a=!1,i=void 0;try{for(var o,u=n[Symbol.iterator]();!(t=(o=u.next()).done)&&(e.push(o.value),!r||e.length!==r);t=!0);}catch(n){a=!0,i=n}finally{try{t||null==u.return||u.return()}finally{if(a)throw i}}return e}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var A={javascript:s.a,ruby:f.a,elixir:v.a,shell:h.a,bash:w.a,css:b.a,nginx:m.a,json:x.a};Object.entries(A).forEach(function(n){var r=E(n,2),e=r[0],t=r[1];u.a.registerLanguage(e,t)}),u.a.initHighlightingOnLoad(),a()("app:app")("Running in development mode!")}},[[21,1,2]]]);