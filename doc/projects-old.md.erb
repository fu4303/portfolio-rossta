---
title: Projects
author: admin
layout: page
---

<% content_for(:title) { 'Projects' } %>

<%= page_header 'Projects', 'Selected projects and free open source software' %>

###[Tacokit.rb](https://github.com/rossta/tacokit.rb)

Ruby toolkit for the [Trello API](https://developer.trello.com)... a work-in-progress. Design and philosophy inspired by [ocktokit.rb](https://gitbhub.com/octokit/octokit.rb). I love using [Trello](https://trello.com) almost everyday for work and personal stuff - which means there's a treasure trove of data waiting to be unlocked. The `Tacokit` gem is a simple ruby interface. It's well-tested and (on its way) to being well-documented and easy to use by Rubyists.

`$ gem install tacokit`

[Source code on github](https://github.com/rossta/tacokit) &middot; [Documentation](https://rossta.net/tacokit.rb)

![Taco](taco.png)

<br/>
* * *
<br/>

###[OpenSesame][sesg]

[OpenSesame][sesg] is a [Warden][ward] strategy for providing "walled garden" authentication for access to Rack-based applications via Omniauth. For example, your company has internal apps and/or staging enviroments for multiple projects and you want something better than HTTP basic auth. The intent is protect the visibility of your app from the out

`$ gem install opensesame`

[Source code on github][sesg]

<%= link_to image_tag("screenshots/screenshot-opensesame.png"), "https://rossta.net/opensesame" %>

<br/>
* * *
<br/>

###[LionelRichie][liog]

LionelRichie is a script for exporting Trello data to Google Docs. Written in ruby, it provides a DSL for mapping data from a Trello board to Google spreadsheets cells. It can be installed via rubygems:

`$ gem install lionel_richie`

[Source code on github][liog]

<br/>
* * *
<br/>

###[zenkaffe][zens]

A simple API for inspiration that provides the dynamic snippets in the banner of this blog. Built on [node.js][node], [express](http://expressjs.com/), [passport](http://passportjs.org/), and [mongoose](http://mongoosejs.com/).

[Source code on github][zeng]

<br/>
* * *
<br/>

###[Pathfinder][path]

A visualization project: animating breadth-first-search with [react](https://facebook.github.io/react/), [immutable.js](https://facebook.github.io/immutable-js/), and [redux](https://github.com/rackt/redux).

[Source code on Github](https://github.com/rossta/pathfinder)

<br/>
* * *
<br/>

###[OptiCal][19]

Another visualization project: represents a twitter user's tweeting history on a calendar heatmap, built on [d3.js](http://d3js.org), [ember.js](http://emberjs.com) and [sinatra][22].

[Source code on Github][opti]

<%= link_to image_tag("screenshots/screenshot-optical.png"), "https://opticalfuzz.herokuapp.com" %>

<br/>
* * *
<br/>

###[seymour][seyp]

A Ruby gem for distributing activity items to Redis-backed activity feeds in a Rails application. Abstractions are provided to make it easy to declare "recipients" of a given event and how these activities should be rendered. To install:

`$ gem install seymour`

[Source code on github][seyg]

<br/>
* * *
<br/>

###[Sudokill][8]

One of my favorite projects, Sudokill is a realtime multiplayer Sudoku implementation. The interface designed to support human vs human over the web, computer vs computer via TCP, or human vs computer. I built the game for NYU heuristics students to compete with their own Sudokill “player” programs.The object of the game is to force the other player to make an invalid Sudoku move. Players take turn playing valid sudoku moves. Moves are valid as long as they don’t violate traditional sudoku configuration. Moves need not conform to the final solution of the board as in solitary Sudoku; in fact, the possibility of invalid states increases as more moves are made which diverge from the actual solution. The best strategies work reduce valid possibilities for the opponent based by looking ahead to future board states.

This project is particularly exciting to me as it leverages the HTML5 WebSocket protocol to make it possible to play the game in a web browser and communicate with a server in realtime using only HTML, CSS and Javascript on the front-end. I implemented a separate protocol to allow programs to connect to the server and play the game via TCP. Fellow students at NYU wrote computer “players” in a variety of languages (java, python, ruby, c ). The game also has some interesting features, such as configurable board density, an on-deck player queue, and a chat server.

[Source code on Github][kill]

<%= link_to image_tag("screenshots/screenshot-sudokill.png", alt: "Sudokill: Sudoku's not a one player game anymore"),
  "http://playsudokill.com" %>

<br/>
* * *
<br/>

###Weplay DropIt [offline]

A drag and drop photo upload for [weplay.com](http://weplay.com) built on with [HTML5 File API](http://www.w3.org/TR/FileAPI/), [backbone.js](http://backbonejs.org) and [sinatra][22].

[Source code on Github][drop]

<%= image_tag "screenshots/screenshot-dropit.png" %>

<br/>
* * *
<br/>

###[runningontilt.com][4]

My friend Brenn got me into running not long after moving to New York. We’re both lifelong lovers of sport and we’ve shared many stories of athletic adventures and mishaps. [runningontilt][4] was born out of the desire to share our own sports stories with the world. I build, design and maintain the site, while Brenn does most of the podcasting. This site is formerly known as *turfcasts*.

<%= image_tag "screenshots/screenshot-runningontilt.png", alt: "Running on Tilt" %>

<br/>
* * *
<br/>

###[terraling.com][6]

Professor Dennis Shasha at NYU recruited me to create a linguistics research tool. The vision is to provide a platform for linguists to make comparisons across a variety of attributes and properties of the world’s languages. Together with an undergrad developer, we built the site over a single semester and launched this past May, 2011. I continue to provide ongoing support.We devised a few database abstractions that would support a wide variety of use cases such as syntactic structures or phonetics. I engineered a multilevel search algorithm to filter results by a variety of potential inputs including linguistic properties, categories, keywords, parent and child relationships and examples.

Tools: Rails 3, mysql, apache, passenger, capistrano, jQuery, rspec, cucumber, capybara, jasmine

[Source code on Github][ling]

<%= link_to image_tag("screenshots/screenshot-terraling.png",
                      alt: "Terraling: searchable database of the world's languages"),
                      "http://terraling.com" %>

<br/>
* * *
<br/>

###[soapbox][11]

In August 2010, I created a simple in-browser PowerPoint-like application as an entry in the 10K Apart contest from [a list apart][10]. Contestants were challenged to use features of HTML5 to create front-end applications in less than 10K of code. Soapbox leverages HTML5 localStorage to save slides in stringified JSON for future use. Although my [my entry][11] didn’t win, it was a good experience to create something straightforward and useful under constraints and a tight timeline.

[Source code on Github][soap]

<%= link_to image_tag("screenshots/screenshot-soapbox.png"), "https://rossta.net/soapbox" %>

<br/>
* * *
<br/>

###[map-ready][13]

A Rails plugin for converting a set of coordinate-based locations to Google map markers.

<br/>
* * *
<br/>

###[supersized][14]

A jQuery plugin for turning a list of images into a full-screen rotating slideshow.

<br/>
* * *
<br/>

###[playground][17]

A few years back, I was asked to talk about being a software engineer for career day at a middle school in the Bronx. The school granted me access to the computer lab, so I built a [javascript playground][17] and taught the student a few Logo-turtle-inspired commands to spark some interest in programming. This was also in the days before JSBin, CodePen and the like.

<br/>
* * *
<br/>

 [4]: http://www.runningontilt.com
 [6]: http://terraling.com/
 [8]: http://playsudokill.com
 [9]: https://rossta.net/soapbox/
 [10]: http://www.alistapart.com/
 [11]: http://10k.aneventapart.com/1/Entry/361
 [12]: https://github.com/rossta/map_ready
 [13]: http://github.com/weplay/supersized
 [14]: http://github.com/rossta/heuristics
 [16]: http://jsdelegate.heroku.com
 [17]: /playground
 [19]: http://opticalfuzz.herokuapp.com
 [21]: http://weplay-dropit.herokuapp.com
 [22]: http://www.sinatrarb.com

 [drop]: https://github.com/rossta/dropit
 [ling]: https://github.com/linguisticexplorer/Linguistic-Explorer
 [soap]: https://github.com/rossta/soapbox
 [kill]: https://github.com/rossta/sudokill
 [opti]: https://github.com/rossta/optical
 [zens]: https://zenkaffe.herokuapp.com/says
 [zeng]: https://github.com/rossta/zenkaffe
 [seyg]: https://github.com/rossta/seymour
 [seyp]: https://rossta.net/seymour/
 [node]: http://nodejs.org/
 [sesg]: https://rossta.net/opensesame/
 [ward]: https://github.com/hassox/warden
 [liog]: https://github.com/rossta/lionel_richie
 [path]: https://rossta.net/pathfinder
