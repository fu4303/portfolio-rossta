<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rossta.net</title>
  <subtitle>Ross Kaffenberger</subtitle>
  <id>https://rossta.net/</id>
  <link href="https://rossta.net/"/>
  <link href="https://rossta.net/feed.xml" rel="self"/>
  <updated>2019-11-25T00:00:00+00:00</updated>
  <author>
    <name>Ross Kaffenberger</name>
  </author>
  <entry>
    <title>Using Bootstrap with Rails Webpacker</title>
    <link rel="alternate" href="/blog/webpacker-with-bootstrap.html"/>
    <id>/blog/webpacker-with-bootstrap.html</id>
    <published>2019-11-25T00:00:00+00:00</published>
    <updated>2019-11-25T00:00:00+00:00</updated>
    <author>
      <name>Ross Kaffenberger</name>
    </author>
    <summary type="html">&lt;p&gt;In this post, I'll demonstrate how to set up a Rails application with Bootstrap for Webpacker.&lt;/p&gt;

&lt;p&gt;If you'd prefer to skip the post and go straight to the demo app, you can find it here: &lt;a href="https://github.com/rossta/rails-webpacker-bootstrap-demo"&gt;https://github.com/rossta/rails-webpacker-bootstrap-demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The examples...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;In this post, I&amp;#39;ll demonstrate how to set up a Rails application with Bootstrap for Webpacker.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;d prefer to skip the post and go straight to the demo app, you can find it here: &lt;a href="https://github.com/rossta/rails-webpacker-bootstrap-demo"&gt;https://github.com/rossta/rails-webpacker-bootstrap-demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The examples and demo app described in this post use the following dependencies:&lt;/p&gt;

&lt;pre&gt;&lt;code class="sh"&gt;# Ruby/Rails
Rails 6.0.1
Ruby 2.6.5
Webpacker 4.2.0

# npm
@rails/webpacker 4.2.0
bootstrap 4.3.1
jQuery 3.4.1
popper.js 1.16.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We&amp;#39;ll assume we&amp;#39;re working from a recently-created Rails 6 app with the default Webpacker installation. The examples may also work with other versions Rails that support Webpacker 4.&lt;/p&gt;

&lt;p&gt;Your entry point for your JavaScript is in &lt;code&gt;app/javascript/packs/application.js&lt;/code&gt;. The default install contains like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;// app/javascript/packs/application.js
require(&amp;quot;@rails/ujs&amp;quot;).start()
require(&amp;quot;channels&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note: the &lt;code&gt;require&lt;/code&gt; statements in the generated javascript can be converted into &lt;code&gt;import&lt;/code&gt; statements, see below, where I&amp;#39;ve also removed the &amp;#39;channels&amp;#39; import.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It should also insert the appropriate javascript and stylesheet &amp;quot;pack&amp;quot; tags in your application layout:&lt;/p&gt;

&lt;pre&gt;&lt;code class="erb"&gt;&amp;lt;%= stylesheet_pack_tag &amp;#39;application&amp;#39;, media: &amp;#39;all&amp;#39; %&amp;gt;
&amp;lt;%= javascript_packs_with_chunks_tag &amp;#39;application&amp;#39; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

      &lt;h3 id="installing-bootstrap" class="title"&gt;
        &lt;a name="installing-bootstrap" class="anchor" href="#installing-bootstrap"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Installing bootstrap
      &lt;/h3&gt;
    
&lt;p&gt;To add bootstrap 4, install via yarn:&lt;/p&gt;

&lt;pre&gt;&lt;code class="sh"&gt;$ yarn add bootstrap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At the time of this post, the above is the equivalent to &lt;code&gt;yarn add bootstrap@4.3.0&lt;/code&gt;. Your installation may vary; I would expect most of the following will still work for other versions of bootstrap 4.&lt;/p&gt;

&lt;p&gt;To get bootstrap css working, add a stylesheet &lt;code&gt;app/javascript/css/site.scss&lt;/code&gt; you&amp;#39;ll import the global bootstrap scss file:&lt;/p&gt;

&lt;pre&gt;&lt;code class="scss"&gt;// app/javascript/css/site.scss

@import &amp;quot;~bootstrap/scss/bootstrap.scss&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To include our new stylesheet in the build output, we must import it from somewhere in our dependency graph. Let&amp;#39;s put this import in the entry point, our &lt;code&gt;application.js&lt;/code&gt; &amp;quot;pack&amp;quot;:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;// app/javascript/packs/application.js

import &amp;#39;css/main&amp;#39; // Webpacker configures Webpack resolve dependencies relative to app/javascript/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you&amp;#39;re new to Webpack, this may comes as a surprise: yes, you import your stylesheets via javascript. In Sprockets, we typically consider have separate &lt;code&gt;app/assets/stylesheets/application.css&lt;/code&gt; and &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt; files as the top of the dependency trees; in Webpack, think of your &amp;quot;application pack&amp;quot;, e.g., &lt;code&gt;app/javascript/packs/application.js&lt;/code&gt;, as the top of the dependency tree from which all static assets will be imported. In other words, there is no need for a separate &amp;quot;stylesheet pack&amp;quot;: ~&lt;code&gt;app/javascript/packs/application.css&lt;/code&gt;~.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Tip&lt;/em&gt; With Webpack, it&amp;#39;s recommended to have only &lt;em&gt;one&lt;/em&gt; entry point (or &amp;quot;pack&amp;quot; in WebpackER terminology) per page for your bundled assets. For our starter app, the entry point is &lt;code&gt;app/javascript/packs/application.js&lt;/code&gt;. I cannot stress this point enough.&lt;/p&gt;
&lt;/blockquote&gt;

      &lt;h3 id="adding-sass-overrides" class="title"&gt;
        &lt;a name="adding-sass-overrides" class="anchor" href="#adding-sass-overrides"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Adding SASS overrides
      &lt;/h3&gt;
    
&lt;p&gt;Since &lt;code&gt;bootstrap.scss&lt;/code&gt; uses SASS variables for theme-ing, you can override the defaults with new values.&lt;/p&gt;

&lt;p&gt;For example, you can change the background and font colors as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class="scss"&gt;// app/javascript/css/site.scss

// sass variable overrides
$body-bg: aliceblue;
$body-color: #111;

@import &amp;quot;~bootstrap/scss/bootstrap.scss&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may also surgically import selected parts of bootstrap to limit bundle size:&lt;/p&gt;

&lt;pre&gt;&lt;code class="scss"&gt;// app/javascript/css/site.scss

// Option A: Include all of Bootstrap
// @import &amp;quot;~bootstrap/scss/bootstrap.scss&amp;quot;;

// Option B: Include parts of Bootstrap
@import &amp;quot;~bootstrap/scss/functions.scss&amp;quot;;
@import &amp;quot;~bootstrap/scss/variables.scss&amp;quot;;
@import &amp;quot;~bootstrap/scss/mixins.scss&amp;quot;;

@import &amp;quot;~bootstrap/scss/reboot.scss&amp;quot;;
@import &amp;quot;~bootstrap/scss/type.scss&amp;quot;;
@import &amp;quot;~bootstrap/scss/images.scss&amp;quot;;
@import &amp;quot;~bootstrap/scss/code.scss&amp;quot;;
@import &amp;quot;~bootstrap/scss/grid.scss&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bootstrap also ships with some JavaScript utilities that function as jQuery plugins. To enable this functionality, add jQuery and popper.js as dependencies:&lt;/p&gt;

&lt;pre&gt;&lt;code class="sh"&gt;yarn add jquery popper.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These libraries need to be available in your Webpack build, so import them along with bootstrap javascript:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;// app/javascript/packs/application.js

// ...
import &amp;#39;jquery&amp;#39;
import &amp;#39;popper.js&amp;#39;
import &amp;#39;bootstrap&amp;#39;
// ...
&lt;/code&gt;&lt;/pre&gt;

      &lt;h3 id="optimizing-the-javascript-bundle" class="title"&gt;
        &lt;a name="optimizing-the-javascript-bundle" class="anchor" href="#optimizing-the-javascript-bundle"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Optimizing the JavaScript bundle
      &lt;/h3&gt;
    
&lt;p&gt;An optional, advanced technique would be to import selected modules asynchronously. The benefit is to limit the size of our initial bundle and defer as much as possible to decrease latency for downloading, parsing, and evaluating JavaScript on page load. Note the &lt;code&gt;application.js&lt;/code&gt; bundle (fingerprinted as &lt;code&gt;js/application-c67c235b5c7d8ac4f1fe.js&lt;/code&gt;) is already 940kB in our Webpack build:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;Version: webpack 4.41.2
Time: 1003ms
Built at: 11/25/2019 4:08:14 PM
                                     Asset       Size       Chunks                         Chunk Names
              css/application-8d90f960.css    175 KiB  application  [immutable]            application
          css/application-8d90f960.css.map    377 KiB  application  [dev]                  application
    js/application-c67c235b5c7d8ac4f1fe.js    940 KiB  application  [emitted] [immutable]  application
js/application-c67c235b5c7d8ac4f1fe.js.map   1.06 MiB  application  [emitted] [dev]        application
                             manifest.json  640 bytes               [emitted]
ℹ ｢wdm｣: Compiled successfully.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As an exercise, we might decide to defer the import and initialization of the jquery plugins. Let&amp;#39;s consider &lt;code&gt;jquery&lt;/code&gt; as a critical dependency; it is needed as part of the &amp;quot;initial&amp;quot; bundle that blocks the page load while it is parsed and evaluated. But &lt;code&gt;popper.js&lt;/code&gt; and &lt;code&gt;bootstrap&lt;/code&gt; can be deferred; since they are plugins that affect the DOM, they&amp;#39;re not as critical, i.e., the DOM needs to be loaded first anyways.&lt;/p&gt;

&lt;p&gt;One such deferring technique is dynamic import. Webpack will recognize when &lt;code&gt;import&lt;/code&gt; is used as a function, e.g. &lt;code&gt;import(&amp;#39;some-lib&amp;#39;)&lt;/code&gt;, and pull out the module as a separate &amp;quot;chunk&amp;quot; (another file), that will be loaded asynchronously when the function is evaluated.&lt;/p&gt;

&lt;p&gt;In our demo app, we can move &lt;code&gt;popper.js&lt;/code&gt; and &lt;code&gt;bootstrap&lt;/code&gt; to a separate file. Critically, this file is NOT in &lt;code&gt;app/javascript/packs&lt;/code&gt; but outside of this directory, such as &lt;code&gt;app/javascript/src&lt;/code&gt;, where we will put all our non-entry-point js:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;// app/javascript/src/plugins.js

import &amp;#39;popper.js&amp;#39;
import &amp;#39;bootstrap&amp;#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Back in the application pack, we replace the &lt;code&gt;popper.js&lt;/code&gt; and &lt;code&gt;bootstrap&lt;/code&gt; imports with a &lt;em&gt;dynamic&lt;/em&gt; import of &lt;code&gt;app/javascript/src/plugins.js&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;// app/javascript/packs/application.js

import &amp;#39;jquery&amp;#39;
import(&amp;#39;src/plugins&amp;#39;) // note the function usage!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When compiling, Webpack will show us a number of additional javascript &amp;quot;chunks&amp;quot; of smaller size than the bundle previously:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Version: webpack 4.41.2
Time: 41ms
Built at: 11/25/2019 4:03:54 PM
                                     Asset       Size       Chunks                         Chunk Names
              css/application-8d90f960.css    175 KiB  application  [immutable]            application
          css/application-8d90f960.css.map    377 KiB  application  [dev]                  application
        js/0-7f46c35cf4589f8534f7.chunk.js    217 KiB            0  [immutable]
    js/0-7f46c35cf4589f8534f7.chunk.js.map    257 KiB            0  [dev]
        js/1-6bb4a0148baccc5762c4.chunk.js  926 bytes            1  [immutable]
    js/1-6bb4a0148baccc5762c4.chunk.js.map  246 bytes            1  [dev]
    js/application-0b7847cb72725f896091.js    727 KiB  application  [emitted] [immutable]  application
js/application-0b7847cb72725f896091.js.map    835 KiB  application  [emitted] [dev]        application
                             manifest.json  640 bytes               [emitted]
ℹ ｢wdm｣: Compiled successfully.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We&amp;#39;ve knocked the &lt;code&gt;application.js&lt;/code&gt; bundle, (now fingerprinted as &lt;code&gt;js/application-0b7847cb72725f896091.js&lt;/code&gt;) down to 727kB. Still sizable, but represents a significant reduction from the first pass.&lt;/p&gt;

&lt;p&gt;Another optimization step could be to configure the &lt;a href="https://webpack.js.org/plugins/split-chunks-plugin/"&gt;&lt;code&gt;SplitChunksPlugin&lt;/code&gt;&lt;/a&gt; to code-split our bundle programmatically, but we&amp;#39;ll save that for another post.&lt;/p&gt;

&lt;p&gt;Our final &lt;code&gt;app/javascript/packs/application.js&lt;/code&gt; file is:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;import Rails from &amp;quot;@rails/ujs&amp;quot;

import &amp;#39;jquery&amp;#39;
import(&amp;#39;src/plugins&amp;#39;) // loads async

import &amp;#39;css/site&amp;#39;

Rails.start()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And our final directory structure is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;app/
  javascript/
    css/
      site.css
    src/
      plugins.js
    packs/
      application.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also check out the demo app for this post at &lt;a href="https://github.com/rossta/rails-webpacker-bootstrap-demo"&gt;https://github.com/rossta/rails-webpacker-bootstrap-demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hope this post shed some light on using Bootstrap with Webpacker on Rails and wish you Happy Webpacking!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Vue.js is omakase</title>
    <link rel="alternate" href="/blog/vue-js-is-omakase.html"/>
    <id>/blog/vue-js-is-omakase.html</id>
    <published>2019-01-08T00:00:00+00:00</published>
    <updated>2019-01-08T00:00:00+00:00</updated>
    <author>
      <name>Ross Kaffenberger</name>
    </author>
    <summary type="html">&lt;p&gt;I'm borrowing from David Heinemeier Hansson here. Six years ago, he wrote &lt;a href="https://dhh.dk//2012/rails-is-omakase.html"&gt;Rails is omakase&lt;/a&gt; to capture his notion of what makes a delicious software framework: it is heavily curated and borne of experience. I think of Vue.js the same way.&lt;/p&gt;

&lt;p&gt;Here's an...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I&amp;#39;m borrowing from David Heinemeier Hansson here. Six years ago, he wrote &lt;a href="https://dhh.dk//2012/rails-is-omakase.html"&gt;Rails is omakase&lt;/a&gt; to capture his notion of what makes a delicious software framework: it is heavily curated and borne of experience. I think of Vue.js the same way.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s an excerpt from DHH&amp;#39;s post:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are lots of à la carte software environments in this world... I want this for my ORM, I want that for my template language, and let&amp;#39;s finish it off with this routing library... It&amp;#39;s a very popular way of consuming software. Rails is not that. Rails is omakase. A team of chefs picked out the ingredients, designed the APIs, and arranged the order of consumption on your behalf according to their idea of what would make for a tasty full-stack framework. The menu can be both personal and quirky. It isn&amp;#39;t designed to appeal to the taste of everyone, everywhere.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I love this metaphor, because a) Rails, including all its API choices and baggage, has treated me very well throughout my career in tech, and b) I love me some agedashi tofu.&lt;/p&gt;

&lt;p&gt;What does this have to do with Vue? I believe Vue&amp;#39;s growing popularity is partly due to its highly selective maintainers and that the recommended ingredients, though not to everyone&amp;#39;s taste, are well-suited to most projects, big and small.&lt;/p&gt;

      &lt;h3 id="enjoy-a-multiple-course-meal" class="title"&gt;
        &lt;a name="enjoy-a-multiple-course-meal" class="anchor" href="#enjoy-a-multiple-course-meal"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Enjoy a multiple-course meal
      &lt;/h3&gt;
    
&lt;p&gt;Vue articulates many courses making up the full meal for a frontend framework. These days, developers have come to expect a robust API to build components and a fast implementation built on top of a virtual dom. However, Vue.js doesn&amp;#39;t stop there. For Vue developers, the framework and its ecosystem provide adequate if not excellent implementations of orthogonal dependencies that solve problems many non-trivial apps eventually need.&lt;/p&gt;

&lt;p&gt;The offering includes the Vue Router, Vuex for state management, and the Vue test utils for unit testing. Through the Vue CLI, developers also get sensible defaults in Webpack configuration for hot module replacement, code-splitting, tree-shaking, efficient long-term caching, while having access to pre-configured opt-ins for TypeScript, Progressive Web Apps, ESLint, and multiple test runners.&lt;/p&gt;

&lt;p&gt;There is great comfort in knowing that the Vue team is behind these projects and they complement one another appropriately in my Vue.js applications.&lt;/p&gt;

      &lt;h3 id="substitutions-cost-little-extra" class="title"&gt;
        &lt;a name="substitutions-cost-little-extra" class="anchor" href="#substitutions-cost-little-extra"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Substitutions cost little extra
      &lt;/h3&gt;
    
&lt;p&gt;So you may not agree with everything on the menu. That&amp;#39;s fine! Many of the defaults are easily changed through configuration or add-ons. Want to use Redux? No problem! Class-style syntax? The customer is always right. Don&amp;#39;t like mustache-style curly braces in templates? You can change it! Maybe you can&amp;#39;t stand the fact that Vue has templates at all and would prefer to use JavaScript. Well, that&amp;#39;s ok too; add another &lt;a href="https://github.com/vuejs/babel-plugin-transform-vue-jsx"&gt;Babel plugin&lt;/a&gt;, and you can write Vue components with JSX inside of render functions a lot like React.&lt;/p&gt;

&lt;p&gt;As another example, let&amp;#39;s talk about Webpack. I think it is a fantastic piece of software. I&amp;#39;ve spent months learning how it works. I have given &lt;a href="https://rossta.net/talks/webpack-survival-guide-rails.html"&gt;a conference talk&lt;/a&gt; about it. However, usually, most of us, myself included, don’t want to maintain a custom configuration from project to project when we have deadlines to meet. The Vue CLI defaults are just fine. Still need to customize? Vue provides an API to extend the base configuration while making it easier to upgrade to take advantage of framework-supported improvements. There&amp;#39;s also nothing stopping you from ditching Webpack for Parcel or Rollup or whatever other transpiler or module bundler you prefer.&lt;/p&gt;

      &lt;h3 id="an-opinionated-chef" class="title"&gt;
        &lt;a name="an-opinionated-chef" class="anchor" href="#an-opinionated-chef"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        An opinionated chef
      &lt;/h3&gt;
    
&lt;p&gt;The core team consistently shows restraint in decided what features and improvements to fold into the framework. For example, much has been made of Vue&amp;#39;s choice to avoid class syntax for components as the default, e.g. &lt;a href="https://github.com/vuejs/vue/issues/2371"&gt;this issue on GitHub&lt;/a&gt;. There are excellent reasons for this decision, one of which is for Vue to work without a build environment. As a feature, this makes Vue incredibly easy to get up-and-running, for beginners learning the framework or for seasoned developers trying out a quick prototype. &amp;quot;It will fail,&amp;quot; some said. I suppose that remains to be seen, but after several years of arguing, the framework continues to thrive.&lt;/p&gt;

      &lt;h3 id="a-consistent-experience-for-all-customers" class="title"&gt;
        &lt;a name="a-consistent-experience-for-all-customers" class="anchor" href="#a-consistent-experience-for-all-customers"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        A consistent experience for all customers
      &lt;/h3&gt;
    
&lt;p&gt;Scott Molinari made this comment on a previous post of mine:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;once the usage of the API is down pat, anyone and everyone who knows Vue is basically doing the same thing. This also means the need for best practices are held to a minimum and both of these advantages mean cognitive load over time is reduced. i.e. when you dig into someone else’s component, you understand it quickly. This all in turn means Vue code is more robust and in the end, it’s of higher quality.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This point is especially important for both beginners and experienced developers alike. One of the significant tradeoffs to cobbling libraries together is that it can be harder to transition into new projects or unfamiliar parts of a large codebase. This approach may pay off for the right teams. In most cases, those tradeoffs aren&amp;#39;t worth it to me because I place much value on consistency.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;When my late wife and I lived in New York City, our favorite restaurant was &lt;a href="https://www.zenkichi.com/"&gt;Zenkichi&lt;/a&gt;. The cuisine is Japanese brasserie, but the experience is so much more. If you make it to the Williamsburg neighborhood in Brooklyn, you should try it.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/blog/stock/zenkichi-tofu.jpg" alt="Zenkichi tofu" /&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#39;s housed in a small building with a wooden exterior and no discernable markings. Located near the East River in the Williamsburg of Brooklyn, it&amp;#39;s easy to miss from the outside.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/blog/stock/zenkichi-entrance.jpg" alt="Zenkichi entrance" /&gt;&lt;/p&gt;

&lt;p&gt;The interior is dark, romantic, hand-crafted. Each table upstairs is like a small private dining room with a pull-down curtain and a small buzzer to summon the wait staff.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/blog/stock/zenkichi-tables.jpg" alt="Zenkichi tables" /&gt;&lt;/p&gt;

&lt;p&gt;Everytime we ate there, we chose the omakase menu. We left all the decision-making up to the chef. It&amp;#39;s difficult at first to place that kind of trust in someone else&amp;#39;s judgment. Giving up control is uncomfortable. However, this led to some delightful discoveries. Of course, not all the courses were to our liking. Nevertheless, we loved the experience.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The chef’s menu need not be reserved for special occasions in web development. With Vue.js, we have a framework that gives us all the ingredients we need to jump into building outstanding user interfaces. It also makes it relatively easy to swap out menu items to suit your preferences. So it would seem you &lt;a href="https://en.wikipedia.org/wiki/You_can%27t_have_your_cake_and_eat_it"&gt;can have your cake and eat it too&lt;/a&gt;? Just another reason why I find Vue.js so fulfilling.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Seven reasons choose Vue.js in 2019</title>
    <link rel="alternate" href="/blog/reasons-to-choose-vue-js-in-2019.html"/>
    <id>/blog/reasons-to-choose-vue-js-in-2019.html</id>
    <published>2019-01-01T00:00:00+00:00</published>
    <updated>2019-01-01T00:00:00+00:00</updated>
    <author>
      <name>Ross Kaffenberger</name>
    </author>
    <summary type="html">&lt;p&gt;I love building applications in Vue.js and here's why I think the future is looking bright for the framework and its community.&lt;/p&gt;

      &lt;h3 id="1-no-build-step-required" class="title"&gt;
        &lt;a name="1-no-build-step-required" class="anchor" href="#1-no-build-step-required"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewbox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        1. No build step required
      &lt;/h3&gt;
    
&lt;p&gt;A critical aspect of the Vue philosophy...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I love building applications in Vue.js and here&amp;#39;s why I think the future is looking bright for the framework and its community.&lt;/p&gt;

      &lt;h3 id="1-no-build-step-required" class="title"&gt;
        &lt;a name="1-no-build-step-required" class="anchor" href="#1-no-build-step-required"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        1. No build step required
      &lt;/h3&gt;
    
&lt;p&gt;A critical aspect of the Vue philosophy is it be easy to get started. Unlike some other popular frameworks, it&amp;#39;s not necessary to use a complex build tool like Webpack to build an application with it. Just include a script tag pointing to the &lt;a href="https://vuejs.org/v2/guide/installation.html#Direct-lt-script-gt-Include"&gt;latest release for development or production&lt;/a&gt;, and you have access to the Vue runtime.&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;&amp;lt;script src=&amp;quot;https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Having a low barrier to entry makes Vue a worthy consideration as a first JS framework to learn.&lt;/p&gt;

      &lt;h3 id="2-a-world-class-command-line-interface" class="title"&gt;
        &lt;a name="2-a-world-class-command-line-interface" class="anchor" href="#2-a-world-class-command-line-interface"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        2. A world-class command line interface
      &lt;/h3&gt;
    
&lt;p&gt;Of course, many developers are looking for advanced development features like ES or TypeScript transpilation, hot module replacement, and tree-shaking, made possible by build tools. Vue has you covered there as well.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g @vue/cli
vue create my-project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This past year, the Vue core team re-wrote their command line interface from the ground up, resulting in Vue CLI 3. It&amp;#39;s designed in such a way to promote best practices and a full-featured default Webpack configuration that should be easier to extend without making it difficult to upgrade, i.e., &amp;quot;no need to eject.&amp;quot; Vue CLI provides a ton of useful additional features, including an interactive project initialization wizard (available through the terminal or a web-based UI), a plugin system to support generators and configuration for community add-ons, and the ability to specify alternative build targets, like web components or as libraries.&lt;/p&gt;

      &lt;h3 id="3-friendly-learning-curve" class="title"&gt;
        &lt;a name="3-friendly-learning-curve" class="anchor" href="#3-friendly-learning-curve"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        3. Friendly learning curve
      &lt;/h3&gt;
    
&lt;p&gt;A common criticism I hear about Vue is that its API has a larger surface area than some other popular frameworks and I agree up to a point (depending on the framework). Ironically, one thing I hear &lt;a href="https://hackernoon.com/should-you-learn-react-or-vue-first-7dc0d4dd8c04"&gt;over&lt;/a&gt; and &lt;a href="https://www.quora.com/How-does-Vue-js-compare-to-React-js"&gt;over&lt;/a&gt; in some of these comparisons are Vue is easy to learn. Though this point is subjective and anecdotal, this has held for folks I&amp;#39;ve heard from regardless of previous experience with JavaScript frameworks and JavaScript in general.&lt;/p&gt;

&lt;p&gt;One reason for this, I believe, is that Vue is a &amp;quot;progressive JavaScript framework.&amp;quot;&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/blog/vue/vuejs.org-homepage.png" alt="Vue is a Progressive JavaScript Framework" /&gt;&lt;/p&gt;

&lt;p&gt;No need to learn the whole API to get started with Vue, no need to learn a new syntax like JSX; only basic HTML, CSS, and JS knowledge is required to get started.&lt;/p&gt;

      &lt;h3 id="4-a-solid-ecosystem" class="title"&gt;
        &lt;a name="4-a-solid-ecosystem" class="anchor" href="#4-a-solid-ecosystem"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        4. A solid ecosystem
      &lt;/h3&gt;
    
&lt;p&gt;Before Vue, I&amp;#39;ve gotten frustrated with the fractured nature of learning best practices beyond the basics. What client-side router should I use? Which data management/Flux implementation should I use? How do I test my components? How should I configure my build system? Over time, answering these questions has gotten easier, depending on the community, but I&amp;#39;ve liked Vue&amp;#39;s approach since the start.&lt;/p&gt;

&lt;p&gt;Vue provides official support for several essential add-ons, including &lt;code&gt;vue-router&lt;/code&gt; for client-side routing, &lt;code&gt;vuex&lt;/code&gt; for managing state, &lt;code&gt;vue-test-utils&lt;/code&gt; for unit testing components, the &lt;code&gt;vue-devtools&lt;/code&gt; browser extension for debugging, Vue CLI as described earlier. None of these tools are required Vue can work quite well with alternatives for these libraries, like &lt;code&gt;redux&lt;/code&gt; or &lt;code&gt;mobx&lt;/code&gt; instead of &lt;code&gt;vuex&lt;/code&gt;, or another router. The critical point is that the community assists developers by supporting a set of very good recommended defaults, something that a backend framework like Ruby on Rails has traditionally done very well.&lt;/p&gt;

      &lt;h3 id="5-the-vue-instance" class="title"&gt;
        &lt;a name="5-the-vue-instance" class="anchor" href="#5-the-vue-instance"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        5. The Vue instance
      &lt;/h3&gt;
    
&lt;p&gt;The most potent aspect Vue is its &lt;a href="https://codingexplained.com/coding/front-end/vue-js/understanding-vue-js-reactivity"&gt;reactivity system&lt;/a&gt;. We can tap into it through &lt;a href="https://vuejs.org/v2/guide/instance.html"&gt;the &lt;code&gt;Vue&lt;/code&gt; instance&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;new Vue({
  el: &amp;quot;#app&amp;quot;,
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This invocation is how every Vue application is initialized. It also creates a fully-reactive root component of the application. A Vue instance can also be used as an event bus or for tracking dependency changes separately from the application component tree, say, as an implementation detail of a Vue plugin.&lt;/p&gt;

&lt;p&gt;Vue&amp;#39;s reactivity system is beautiful in its simplicity. Playing with the Vue instance is an excellent way to understanding how the reactivity system works and level up one&amp;#39;s Vue, and JavaScript, skills in general.&lt;/p&gt;

      &lt;h3 id="6-vue-3-lands-this-year" class="title"&gt;
        &lt;a name="6-vue-3-lands-this-year" class="anchor" href="#6-vue-3-lands-this-year"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        6. Vue 3 lands this year
      &lt;/h3&gt;
    
&lt;p&gt;Speaking of Vue&amp;#39;s reactivity system, &lt;a href="https://medium.com/the-vue-point/plans-for-the-next-iteration-of-vue-js-777ffea6fabf"&gt;Vue 3 is expected to ship this year&lt;/a&gt;. Among some architectural and performance improvements and minor API changes, Vue 3 provides a new Proxy-based implementation of its reactivity system.&lt;/p&gt;

&lt;p&gt;The Proxy-based system solves &lt;a href="https://vuejs.org/v2/guide/reactivity.html#Change-Detection-Caveats"&gt;some of the known caveats with Vue change detection&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;In Vue 2, Vue cannot:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Detect property addition, e.g., &lt;code&gt;vm.b = 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Detect array modification through indexing or modifying length, e.g., &lt;code&gt;arr[0] = 2&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;The workound: use &lt;code&gt;Vue.set&lt;/code&gt;, e.g., &lt;code&gt;Vue.set(vm, &amp;#39;b&amp;#39;, 2)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vue 3 Proxy-based reactivity makes these annoying issues go away.&lt;/p&gt;

      &lt;h3 id="7-an-amazing-community" class="title"&gt;
        &lt;a name="7-an-amazing-community" class="anchor" href="#7-an-amazing-community"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        7. An amazing community
      &lt;/h3&gt;
    
&lt;p&gt;Since I&amp;#39;ve started using Vue, I&amp;#39;ve been fortunate to learn from a variety of Vue developers through forums, on Twitter and GitHub, and at local meetups. Vue has a distributed, hard-working core team, who are continually improving the framework without over-burdening developers with a bunch of fringe features or painful upgrades. The &lt;a href="https://forum.vuejs.org/"&gt;Vue forums&lt;/a&gt; is a great way to get insight from experts on tricky issues. Vue conferences, like &lt;a href="https://vueconf.us/"&gt;VueConf.us&lt;/a&gt; and &lt;a href="https://www.vuejs.amsterdam/"&gt;Vue Amsterdam&lt;/a&gt;, a great way to connect with other members of the community and attend more in-depth workshops, are already taking place all over the world. There&amp;#39;s also &lt;a href="https://vuevixens.org/"&gt;Vue Vixens&lt;/a&gt;, an organization that provides safe environments for people who identify as women to learn Vue.js.&lt;/p&gt;

      &lt;h3 id="bonus-it-39-s-just-plain-fun" class="title"&gt;
        &lt;a name="bonus-it-39-s-just-plain-fun" class="anchor" href="#bonus-it-39-s-just-plain-fun"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Bonus. It&amp;#39;s just plain fun
      &lt;/h3&gt;
    
&lt;p&gt;I got my start in web development just as the Ruby and the Rails framework was taking off. One thing I have always loved about Ruby is creator Yukihiro Matsumoto&amp;#39;s explicit (and, dare I say, audacious) goal of inventing a language optimized for developer happiness.&lt;/p&gt;

&lt;p&gt;I get these same feelings when I build interfaces with Vue.js. I was spending less time wrestling with configuration and APIs and more time building and having fun doing it.&lt;/p&gt;

&lt;p&gt;While I don&amp;#39;t know that Vue.js was created so explicitly in the name of developer happiness, for, it has and continues to be fulfilling to that end. It&amp;#39;s something I hear from many others who&amp;#39;ve taken time to learn the framework and probably the most important reason I&amp;#39;ll recommend Vue.js in 2019.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;So what are you waiting for? Best of luck with your Vue.js journey in the coming year.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Refactoring to nested abstract components</title>
    <link rel="alternate" href="/blog/refactoring-to-nested-abstract-components-vuejs-pdf-viewer.html"/>
    <id>/blog/refactoring-to-nested-abstract-components-vuejs-pdf-viewer.html</id>
    <published>2018-12-30T00:00:00+00:00</published>
    <updated>2018-12-30T00:00:00+00:00</updated>
    <author>
      <name>Ross Kaffenberger</name>
    </author>
    <summary type="html">&lt;p&gt;To add a preview pane to the Vue.js PDF viewer, I wanted it to have very similar behavior to the document pane. In this post, I'll demonstrate how I extracted this behavior with a set of components, as opposed to alternatives, like a mixin.&lt;/p&gt;

     ...</summary>
    <content type="html">&lt;p&gt;To add a preview pane to the Vue.js PDF viewer, I wanted it to have very similar behavior to the document pane. In this post, I&amp;#39;ll demonstrate how I extracted this behavior with a set of components, as opposed to alternatives, like a mixin.&lt;/p&gt;

      &lt;h3 id="the-project" class="title"&gt;
        &lt;a name="the-project" class="anchor" href="#the-project"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        The project
      &lt;/h3&gt;
    
&lt;p&gt;This post is part of ongoing series, &lt;a href="/blog/series/pdf-viewer.html"&gt;Building a PDF Viewer with Vue.js&lt;/a&gt;. The source code for this project is on Github at &lt;a href="https://github.com/rossta/vue-pdfjs-demo"&gt;rossta/vue-pdfjs-demo&lt;/a&gt;. The source code for the behavior described in this post can be found in the &lt;a href="https://github.com/rossta/vue-pdfjs-demo/tree/tutorial/part-4-shared-behavior-components"&gt;&lt;code&gt;tutorial/part-4-shared-behavior-components&lt;/code&gt; branch on Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s the latest &lt;a href="https://rossta.net/vue-pdfjs-demo/"&gt;project demo&lt;/a&gt;.&lt;/p&gt;

      &lt;h3 id="catching-up-from-last-time" class="title"&gt;
        &lt;a name="catching-up-from-last-time" class="anchor" href="#catching-up-from-last-time"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Catching up from last time
      &lt;/h3&gt;
    
&lt;p&gt;So far in &lt;a href="/blog/series/pdf-viewer.html"&gt;this series&lt;/a&gt;, we have built a simple PDF viewer to render the pages of PDF document to &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; elements with Vue. We have also updated our components to fetch and render PDF pages lazily as they are scrolled into the viewport and we have extracted this behavior into a &lt;code&gt;&amp;lt;PDFData&amp;gt;&lt;/code&gt; component.&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/screenshots/screenshot-pdf-viewer-part-3.jpg" alt="Preview of the preview" /&gt;&lt;/p&gt;

      &lt;h3 id="the-problem" class="title"&gt;
        &lt;a name="the-problem" class="anchor" href="#the-problem"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        The problem
      &lt;/h3&gt;
    
&lt;p&gt;At a high level, both the preview and document panes must:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Be independently scrollable&lt;/li&gt;
&lt;li&gt;Trigger events, received by the &lt;a href="/blog/extracting-a-data-component-in-vue.html"&gt;data source, the &lt;code&gt;&amp;lt;PDFData&amp;gt;&lt;/code&gt; component&lt;/a&gt;, to fetch more page data as they are scrolled.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The new preview pane will have a similar layout to the document. Given the following component hierarchy for the current document viewer:&lt;/p&gt;

&lt;pre&gt;&lt;code class="html"&gt;&amp;lt;PDFData&amp;gt;
  &amp;lt;PDFDocument&amp;gt;
    &amp;lt;PDFPage /&amp;gt;
    &amp;lt;PDFPage /&amp;gt;
    &amp;lt;PDFPage /&amp;gt;
    ...
  &amp;lt;/PDFDocument&amp;gt;
&amp;lt;/PDFData&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That of the preview pane will be nearly identical:&lt;/p&gt;

&lt;pre&gt;&lt;code class="html"&gt;&amp;lt;PDFData&amp;gt;
  &amp;lt;PDFPreview&amp;gt;
    &amp;lt;PDFThumbnail /&amp;gt;
    &amp;lt;PDFThumbnail /&amp;gt;
    &amp;lt;PDFThumbnail /&amp;gt;
    ...
  &amp;lt;/PDFPreview&amp;gt;
&amp;lt;/PDFData&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Extracting the scroll-and-fetch functionality presents an interesting challenge because it is currently split between the &lt;code&gt;&amp;lt;PDFDocument&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;PDFPage&amp;gt;&lt;/code&gt; components.&lt;/p&gt;

&lt;p&gt;Among other things, the &lt;code&gt;&amp;lt;PDFDocument&amp;gt;&lt;/code&gt; is responsible for determining when:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;the scrollable &amp;quot;boundary&amp;quot;, i.e., where in the document the viewport is located&lt;/li&gt;
&lt;li&gt;the last fetched page has entered the viewport, i.e., when to fetch additional pages&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;PDFPage&amp;gt;&lt;/code&gt; is responsible for determining when it is visible by determining whether its boundaries overlap with the viewport.&lt;/p&gt;

      &lt;h3 id="the-component-based-solution" class="title"&gt;
        &lt;a name="the-component-based-solution" class="anchor" href="#the-component-based-solution"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        The component-based solution
      &lt;/h3&gt;
    
&lt;p&gt;To share this behavior with the preview pane hierarchy, we&amp;#39;ll create two abstract components, a &lt;code&gt;&amp;lt;ScrollingPage&amp;gt;&lt;/code&gt; to take the responsibility of determing page visibility and a &lt;code&gt;&amp;lt;ScrollingDocument&amp;gt;&lt;/code&gt; to absorb the properties and methods for determining the scroll boundaries and when the request more pages. We&amp;#39;ll compose both the document and new preview panes from these new components.&lt;/p&gt;

&lt;p&gt;The hierarchy becomes:&lt;/p&gt;

&lt;pre&gt;&lt;code class="html"&gt;&amp;lt;PDFData&amp;gt;
  &amp;lt;PDFPreview&amp;gt;
    &amp;lt;ScrollingDocument&amp;gt;
      &amp;lt;ScrollingPage&amp;gt;
        &amp;lt;PDFThumbnail /&amp;gt;
      &amp;lt;/ScrollingPage&amp;gt;
      &amp;lt;ScrollingPage&amp;gt;
        &amp;lt;PDFThumbnail /&amp;gt;
      &amp;lt;/ScrollingPage&amp;gt;
      ...
    &amp;lt;/ScrollingDocument&amp;gt;
  &amp;lt;/PDFPreview&amp;gt;
  &amp;lt;PDFDocument&amp;gt;
    &amp;lt;ScrollingDocument&amp;gt;
      &amp;lt;ScrollingPage&amp;gt;
        &amp;lt;PDFPage /&amp;gt;
      &amp;lt;/ScrollingPage&amp;gt;
      &amp;lt;ScrollingPage&amp;gt;
        &amp;lt;PDFPage /&amp;gt;
      &amp;lt;/ScrollingPage&amp;gt;
      ...
    &amp;lt;/ScrollingDocument&amp;gt;
  &amp;lt;/PDFDocument&amp;gt;
&amp;lt;/PDFData&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rather than detailing all the changes, but I&amp;#39;ll highlight some key takeaways about how I fit the pieces together.&lt;/p&gt;

&lt;p&gt;First, these changes are made possible by Vue &lt;code&gt;slots&lt;/code&gt; and &lt;code&gt;slot-scope&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;ScrollingPage&amp;gt;&lt;/code&gt; component is abstract, meaning it does not render any html itself. Instead, it delegates to its children, which, for our app, is a single &lt;code&gt;&amp;lt;PDFPage&amp;gt;&lt;/code&gt;, through its &lt;code&gt;render&lt;/code&gt; function while passing in additional properties via &lt;code&gt;this.$scopedSlots&lt;/code&gt;. This is akin to calling the child component with arguments.&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;// src/components/ScrollingPage.vue

render() {
  return this.$scopedSlots.default({
    isElementVisible: this.isElementVisible,
  });
},
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;ScrollingDocument&amp;gt;&lt;/code&gt; uses a &lt;code&gt;v-for&lt;/code&gt; loop to render each of the fetched pages as &lt;code&gt;&amp;lt;ScrollingPage&amp;gt;&lt;/code&gt; components passing in properties the &lt;code&gt;&amp;lt;ScrollingPage&amp;gt;&lt;/code&gt; needs to perform its calculations. Here is a simplified version of the &lt;code&gt;&amp;lt;ScrollingDocument&amp;gt;&lt;/code&gt; template.&lt;/p&gt;

&lt;pre&gt;&lt;code class="html"&gt;&amp;lt;template&amp;gt;
  &amp;lt;ScrollingPage
    v-for=&amp;quot;page in pages&amp;quot;
    :key=&amp;quot;page.pageNumber&amp;quot;
    v-bind=&amp;quot;{page, scrollTop, clientHeight}&amp;quot;
    &amp;gt;
    &amp;lt;div
      class=&amp;quot;scrolling-page&amp;quot;
      slot-scope=&amp;quot;{isElementVisible}&amp;quot;
      &amp;gt;
      &amp;lt;slot v-bind=&amp;quot;{page, isElementVisible}&amp;quot;&amp;gt;&amp;lt;/slot&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/ScrollingPage&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note the use of the &lt;code&gt;slot-scope&lt;/code&gt; to receive the &lt;code&gt;isElementVisible&lt;/code&gt; prop passed in from the &lt;code&gt;&amp;lt;ScrollingPage&amp;gt;&lt;/code&gt; scoped slot. This and the individual &lt;code&gt;page&lt;/code&gt; prop, provided by the &lt;code&gt;v-for&lt;/code&gt; loop, are passed on to the &lt;code&gt;slot&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The new &lt;code&gt;&amp;lt;PDFDocument&amp;gt;&lt;/code&gt; template below shows how this slot is used. It inserts &lt;code&gt;&amp;lt;PDFPage&amp;gt;&lt;/code&gt; as a child of &lt;code&gt;&amp;lt;ScrollingDocument&amp;gt;&lt;/code&gt; and extracts the key props with another usage of &lt;code&gt;slot-scope&lt;/code&gt; (a &lt;code&gt;slot-scope&lt;/code&gt; within a &lt;code&gt;slot-scope&lt;/code&gt;!) while merging in an additional prop, &lt;code&gt;scale&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class="html"&gt;&amp;lt;template&amp;gt;
  &amp;lt;ScrollingDocument
    class=&amp;quot;pdf-document&amp;quot;
    v-bind=&amp;quot;{pages, pageCount, currentPage}&amp;quot;
    @pages-fetch=&amp;quot;onPagesFetch&amp;quot;
    &amp;gt;
    &amp;lt;PDFPage
      slot-scope=&amp;quot;{page, isElementVisible}&amp;quot;
      v-bind=&amp;quot;{scale, page, isElementVisible}&amp;quot;
    /&amp;gt;
  &amp;lt;/ScrollingDocument&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;PDFPreview&amp;gt;&lt;/code&gt; is almost identical and demonstrates why we went to the trouble of using scoped slots&lt;/p&gt;

&lt;pre&gt;&lt;code class="html"&gt;&amp;lt;template&amp;gt;
  &amp;lt;ScrollingDocument
    class=&amp;quot;pdf-document&amp;quot;
    v-bind=&amp;quot;{pages, pageCount, currentPage}&amp;quot;
    @pages-fetch=&amp;quot;onPagesFetch&amp;quot;
    &amp;gt;
    &amp;lt;PDFThumbnail
      slot-scope=&amp;quot;{page, isElementVisible}&amp;quot;
      v-bind=&amp;quot;{scale, page, isElementVisible}&amp;quot;
    /&amp;gt;
  &amp;lt;/ScrollingDocument&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can render a different experience in this part of the component hierachy by changing the component we give to the slot (the &lt;code&gt;&amp;lt;PDFThumbnail&amp;gt;&lt;/code&gt;) while also getting the benefits of the shared behavior.&lt;/p&gt;

      &lt;h3 id="stepping-back" class="title"&gt;
        &lt;a name="stepping-back" class="anchor" href="#stepping-back"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Stepping back
      &lt;/h3&gt;
    
&lt;p&gt;Note the contrast in this approach with mixins. It would have been arguably much more straight forward easier to move required props, methods, and hooks into separate mixins for the preview and document panes. While we could accomplish the goal of code-sharing, it comes at the cost of implicit dependencies, potential name clashes, and other aspects of mounting complexity we noted earlier.&lt;/p&gt;

&lt;p&gt;Refactoring to components has a higher barrier to entry; it requires some extra thought and a grasp of &lt;code&gt;slots&lt;/code&gt; and &lt;code&gt;slot-scope&lt;/code&gt; (yes, it can get confusing).&lt;/p&gt;

&lt;p&gt;One practical advantage is we can troubleshoot the scrolling behavior with a clear picture of where the behavior is located in our component tree with Vue devtools:&lt;/p&gt;

&lt;p&gt;&lt;img src="/assets/images/blog/vue-pdf-viewer/part-4-shared-behavior-devtools.jpg" alt="scrolling components in Vue devtools" /&gt;&lt;/p&gt;

&lt;p&gt;In my opinion, this approach allows us to gain a clear separation of concerns and a better representation of how the pieces fit together as a whole; i.e., I believe the system is easier to understand and debug.&lt;/p&gt;

&lt;p&gt;As I mentioned earlier, I left out many of the implementation details for the components described here. Feel free to check out the &lt;a href="https://github.com/rossta/vue-pdfjs-demo"&gt;source code on Github&lt;/a&gt;. Make a pull request or let me know how I could improve things by &lt;a href="https://twitter.com/rossta"&gt;reaching out on Twitter&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Why RSpec users should care about Rails 5.1 and system tests</title>
    <link rel="alternate" href="/blog/why-rails-system-tests-matter.html"/>
    <id>/blog/why-rails-system-tests-matter.html</id>
    <published>2018-12-27T00:00:00+00:00</published>
    <updated>2018-12-27T00:00:00+00:00</updated>
    <author>
      <name>Ross Kaffenberger</name>
    </author>
    <summary type="html">&lt;p&gt;I get the feeling a lot of RSpec users don’t know about the advantages of Rails 5.1 changes as part of the introduction of system tests. RSpec has had feature tests for a long time? What’s the big deal?&lt;/p&gt;

      &lt;h3 id="background" class="title"&gt;
        &lt;a name="background" class="anchor" href="#background"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewbox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
   ...&lt;/h3&gt;</summary>
    <content type="html">&lt;p&gt;I get the feeling a lot of RSpec users don’t know about the advantages of Rails 5.1 changes as part of the introduction of system tests. RSpec has had feature tests for a long time? What’s the big deal?&lt;/p&gt;

      &lt;h3 id="background" class="title"&gt;
        &lt;a name="background" class="anchor" href="#background"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Background
      &lt;/h3&gt;
    
&lt;p&gt;For context, RSpec has supported high level testing through &lt;a href="https://relishapp.com/rspec/rspec-rails/docs/feature-specs/feature-spec"&gt;feature tests&lt;/a&gt; for many years. Like Cucumber, feature tests are designed to exercise application functionality through the user interface. There are many merits to feature tests as a way to document core business logic and catch regressions. There are drawbacks as well, including the fact that they can be very expensive, i.e., slow, to maintain and execute. I&amp;#39;m going to ignore this for now.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll also altogether ignore interesting alternatives for UI and fullstack testing, like &lt;a href="https://www.cypress.io/"&gt;cypress.io&lt;/a&gt;. This post is aimed at folks working on Rails apps that have accumulated month or years worth of RSpec feature tests.&lt;/p&gt;

&lt;p&gt;For a long time, Rails has resisted first class support for this kind of testing, so much of RSpec&amp;#39;s integration with Rails is bolted on. It has mostly worked well, though there have been some gotchas which I&amp;#39;ll get to.&lt;/p&gt;

&lt;p&gt;Last year, that all changed when Rails released Rails 5.1 with some key changes to support the introduction of system tests. On the surface, Rails system tests have pretty much the same usage and goals as RSpec feature tests, including integration with Capybara, the Ruby interface to interacting with numerous webdrivers like headless Chrome, Gecko for Firefox, PhantomJS, etc. So basically everything we&amp;#39;ve had in RSpec for ages. RSpec developers collectively yawned.&lt;/p&gt;

&lt;p&gt;The real win with Rails 5.1 is what&amp;#39;s happening under the surface. The Rails team made key changes to internals, stuff RSpec alone couldn’t provide.&lt;/p&gt;

      &lt;h3 id="why-transactional-tests-are-better" class="title"&gt;
        &lt;a name="why-transactional-tests-are-better" class="anchor" href="#why-transactional-tests-are-better"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Why transactional tests are better
      &lt;/h3&gt;
    
&lt;p&gt;Awhile back, RSpec feature tests, through Capybara, enabled developers to test UI interactions enabled by JavaScript. With so much logic in our apps going to the frontend, this was a huge improvement over standard Rails testing support, which previously stopped well short of that.&lt;/p&gt;

&lt;p&gt;Though this helped increase testing confidence (let’s ignore flaky JS tests for now), this approach also came with a catch: developers had to think about managing the database in their end-to-end JavaScript-enabled acceptance tests.&lt;/p&gt;

&lt;p&gt;Backing up a step, RSpec tests are typically individually wrapped in database transactions. This makes rolling back DB changes that occur within each test really fast and easy. But in pre-Rails 5.1, RSpec feature tests with a JavaScript-enabled webdriver like Chrome, wrapping tests in transactions doesn’t work!&lt;/p&gt;

&lt;p&gt;Previously, it was not possible for the test and server threads to share the same database connection for JavaScript-enabled drivers; any data created in a transaction in the test isn’t committed to the DB, so the Rails server doesn’t have access to the data! Missing data in the JavaScript acceptance tests is really confusing to lots of Rails developers, myself included. To this day, this “gotcha” has tripped me up on new projects.&lt;/p&gt;

&lt;p&gt;The workaround, for years, has been to disable transaction mode for—the very feature that makes database-backed test faster and easier to rollback for successive tests—for JavaScript-enabled feature tests. To replace this, most RSpec-based Rails projects lean on another gem, DatabaseCleaner, plus some extra configuration, to switch modes just for JavaScript-enabled acceptance tests. The alternative modes are usually either truncate the whole DB or delete all the rows; both slower and sometime problematic when switching back-and-forth. All this instead of just having RSpec rollback transactions without us having to think about it while developing our tests.&lt;/p&gt;

&lt;p&gt;Not to mention, having the Rails server run in a separate process makes it a lot harder to debug. If you like using a debugger like pry in your application code, good luck making it work with traditional RSpec acceptance tests.&lt;/p&gt;

&lt;p&gt;Rails 5.1+ solves the database problem. &lt;a href="https://github.com/eileencodes"&gt;Eileen Uchitelle&lt;/a&gt; on the Rails team made the changes necessary to run ensure test threads and the Rails server can run in the same process by sharing the database connection (&lt;a href="https://github.com/rails/rails/pull/28083"&gt;pull request&lt;/a&gt;). This made it possible to wrap JavaScript-enabled acceptance tests in database transactions. To take advantage, RSpec users would need to upgrade to a recent version of Rails, re-enable transactional fixtures for all tests, and remove the DatabaseCleaner gem.&lt;/p&gt;

&lt;p&gt;The result: faster rollback, no multiprocess confusion, no need to manage the database with DatabaseCleaner, debugging the server in process is possible, etc. A better solution all around.&lt;/p&gt;

      &lt;h3 id="in-closing" class="title"&gt;
        &lt;a name="in-closing" class="anchor" href="#in-closing"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        In closing
      &lt;/h3&gt;
    
&lt;p&gt;To my RSpec friends: upgrade to Rails 5.1, drop the DatabaseCleaner gem, and set  &lt;code&gt;config.use_transactional_fixtures = true&lt;/code&gt; in the RSpec configuration. It should also be relatively straightforward to &lt;a href="https://medium.com/table-xi/a-quick-guide-to-rails-system-tests-in-rspec-b6e9e8a8b5f6"&gt;adopt system tests from existing feature tests&lt;/a&gt;, but either strategy will work with those changes. You’ll still need to fix those flaky scenarios yourself though.&lt;/p&gt;

      &lt;h3 id="resources" class="title"&gt;
        &lt;a name="resources" class="anchor" href="#resources"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Resources
      &lt;/h3&gt;
    
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/table-xi/a-quick-guide-to-rails-system-tests-in-rspec-b6e9e8a8b5f6"&gt;https://medium.com/table-xi/a-quick-guide-to-rails-system-tests-in-rspec-b6e9e8a8b5f6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://everydayrails.com/2018/01/08/rspec-3.7-system-tests.html"&gt;https://everydayrails.com/2018/01/08/rspec-3.7-system-tests.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chriskottom.com/blog/2017/04/full-stack-testing-with-rails-system-tests/"&gt;https://chriskottom.com/blog/2017/04/full-stack-testing-with-rails-system-tests/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rails/rails/pull/28083"&gt;https://github.com/rails/rails/pull/28083&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/44269257/rails-5-1-configuring-built-in-system-tests-with-rspec"&gt;https://stackoverflow.com/questions/44269257/rails-5-1-configuring-built-in-system-tests-with-rspec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;This post has been edited to reflect Thomas Walpole&amp;#39;s corrections in the comments.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Everything is Enumerated</title>
    <link rel="alternate" href="/blog/everything-is-enumerated.html"/>
    <id>/blog/everything-is-enumerated.html</id>
    <published>2018-12-21T00:00:00+00:00</published>
    <updated>2018-12-21T00:00:00+00:00</updated>
    <author>
      <name>Ross Kaffenberger</name>
    </author>
    <summary type="html">&lt;p&gt;In Ruby, some methods expect a block as a callback yielding elements of some internal data structure.&lt;/p&gt;

&lt;p&gt;Imagine a method &lt;code&gt;paginated_results&lt;/code&gt; on some &lt;code&gt;client&lt;/code&gt; object that yields individual pages.&lt;/p&gt;

&lt;pre&gt;&lt;code class="ruby"&gt;client.paginated_results(params) { |page| puts page.contents...&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;p&gt;In Ruby, some methods expect a block as a callback yielding elements of some internal data structure.&lt;/p&gt;

&lt;p&gt;Imagine a method &lt;code&gt;paginated_results&lt;/code&gt; on some &lt;code&gt;client&lt;/code&gt; object that yields individual pages.&lt;/p&gt;

&lt;pre&gt;&lt;code class="ruby"&gt;client.paginated_results(params) { |page| puts page.contents }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The method may hide away some complexity in retrieving pages.&lt;/p&gt;

&lt;pre&gt;&lt;code class="ruby"&gt;def paginated_results(params = {})
  before  = nil
  max     = 1000
  limit   = 50
  results = []

  loop do
    page = fetch_page(params.merge(before: before, limit: limit)) # imaginary request

    results += page

    yield page

    break if results.length &amp;gt;= max

    before = page.last[&amp;quot;id&amp;quot;]
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To callers of this method, there is an implicit data structure. Being Ruby, we may expect to be able to call &lt;code&gt;Enumerable&lt;/code&gt; methods on this data to inspect, slice, or augment the contents in a convenient way.&lt;/p&gt;

&lt;p&gt;But we may not have access to method&amp;#39;s internals and the underlying data structure, especially if we&amp;#39;re using a method from an external library. This is the case with our &lt;code&gt;paginated_results&lt;/code&gt; example; the &lt;code&gt;results&lt;/code&gt; array is not exposed to the method caller.&lt;/p&gt;

&lt;p&gt;Callers of the method are forced to build up state from the outside. Here&amp;#39;s a contrived example:&lt;/p&gt;

&lt;pre&gt;&lt;code class="ruby"&gt;table_of_contents = []
index = 0

client.paginated_results(order: :asc) do |p|
  table_of_contents &amp;lt;&amp;lt; [index+1, p.title] if p.title_page?
end

puts table_of_contents
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There&amp;#39;s another way in Ruby! We can &amp;quot;enumeratorize&amp;quot; it!&lt;/p&gt;

&lt;p&gt;Ruby&amp;#39;s &lt;code&gt;to_enum&lt;/code&gt; method is defined on all objects. Quite simply, it can convert a method into &lt;code&gt;Enumerator&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class="ruby"&gt;client.to_enum(:paginated_results, params)
# =&amp;gt; &amp;lt;Enumerator ...&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What this gives us is an enumerable object that behaves as if we built up that array ourselves, which means we can call methods from the &lt;code&gt;Enumerable&lt;/code&gt; module, chain other enumerators to augment the block arguments, use &lt;code&gt;lazy&lt;/code&gt;, etc.&lt;/p&gt;

&lt;pre&gt;&lt;code class="ruby"&gt;client.to_enum(:paginated_results, params).
  filter(:title_page?).
  map.with_index { |p, i| [i+i, p.title] }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I love this type of expression because it&amp;#39;s more direct, flexible, and intention revealing. Authors need be less concerned with building up state with local variables.&lt;/p&gt;

&lt;p&gt;In fact, this pattern is so useful that many authors have started building in &lt;code&gt;to_enum&lt;/code&gt; to such methods for when the caller omits the block. The implementation for &lt;code&gt;paginated_results&lt;/code&gt; might look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class="ruby"&gt;def paginated_results(params = {})
  return to_enum(__method__, params) unless block_given?

  # rest unchanged
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While you are free to stick with the imperative approach, I hope this post demonstrates how &lt;code&gt;to_enum&lt;/code&gt; offers Rubyists a more declarative and functionally-flavored alternative.&lt;/p&gt;

      &lt;h3 id="wrapping-up" class="title"&gt;
        &lt;a name="wrapping-up" class="anchor" href="#wrapping-up"&gt;       &lt;svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"&gt;
       &lt;path d="M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z"&gt;&lt;/path&gt;
       &lt;/svg&gt;
&lt;/a&gt;
        Wrapping up
      &lt;/h3&gt;
    
&lt;p&gt;When you&amp;#39;re in a punch, you can use &lt;code&gt;to_enum&lt;/code&gt; to wrap iterative methods to add otherwise missing &lt;code&gt;Enumerable&lt;/code&gt; properties. And, when designing your classes, consider adopting the &lt;code&gt;return to_enum(__method__) unless block_given?&lt;/code&gt; pattern in method definitions to enhance iterative methods.&lt;/p&gt;
</content>
  </entry>
</feed>
